services:
  caddy:
    image: caddy:alpine
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    restart: unless-stopped
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./config/nginx:/etc/nginx/conf.d:ro
      - ./src:/var/www/html
    depends_on:
      - php-fpm
  php-fpm:
    build: ./build/php/
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
      - ./config/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini:ro
      - ./config/php/zz-php-fpm.ini:/usr/local/etc/php-fpm.d/zz-php-fpm.ini:ro
      - ./config/php/zz-php.ini:/usr/local/etc/php/conf.d/zz-php.ini:ro
    depends_on:
      - db
    environment:
      DB_HOST: "db" # The db service
      DB_DATABASE: ${MYSQL_DATABASE}
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
  db:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  # Uncomment node service if you want to use npm.
  node:
    image: node:24-alpine
    # This keeps the service active, you can comment this out if you're only gonna use docker exec node npm ...
    # Using that command will be like using npm in your /src directory.
    # entrypoint: [ "tail", "-f", "/dev/null" ]
    working_dir: /app
    volumes:
      - ./src:/app
  redis-stack:
    image: redis/redis-stack:latest
    ports:
      - "8001:8001"
    environment:
      REDIS_ARGS: ${REDIS_ARGS}
    volumes:
      - redis_stack_data:/data

volumes:
  caddy_data:
  caddy_config:
  redis_stack_data:
